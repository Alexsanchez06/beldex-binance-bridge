{"ast":null,"code":"import _objectSpread from \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/input/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormControl, OutlinedInput, FormHelperText, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport StyledLabel from '../label';\nimport styles from './styles';\n\nfunction StyledInput(props) {\n  const classes = props.classes,\n        helpertext = props.helpertext,\n        placeholder = props.placeholder,\n        id = props.id,\n        defaultValue = props.defaultValue,\n        label = props.label,\n        fullWidth = props.fullWidth,\n        value = props.value,\n        onChange = props.onChange,\n        error = props.error,\n        disabled = props.disabled,\n        password = props.password;\n\n  const _React$useState = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleClickShowPassword = () => {\n    setValues(_objectSpread({}, values, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  const endAdornment = password ? React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Toggle password visibility\",\n    onClick: handleClickShowPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, values.showPassword ? React.createElement(Visibility, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(VisibilityOff, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))) : null;\n  return React.createElement(FormControl, {\n    className: classes.root,\n    variant: \"outlined\",\n    fullWidth: fullWidth,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(StyledLabel, {\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(OutlinedInput, {\n    id: id,\n    placeholder: placeholder,\n    fullWidth: fullWidth,\n    defaultValue: defaultValue,\n    labelWidth: 0,\n    value: value,\n    onChange: onChange,\n    disabled: disabled,\n    type: password ? values.showPassword ? 'text' : 'password' : 'text',\n    endAdornment: endAdornment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), helpertext && React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, helpertext));\n}\n\nStyledInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  helpertext: PropTypes.string,\n  placeholder: PropTypes.string,\n  id: PropTypes.string,\n  defaultValue: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  password: PropTypes.bool\n};\nexport default withStyles(styles)(StyledInput);","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/input/index.js"],"names":["React","PropTypes","withStyles","FormControl","OutlinedInput","FormHelperText","InputAdornment","IconButton","Visibility","VisibilityOff","StyledLabel","styles","StyledInput","props","classes","helpertext","placeholder","id","defaultValue","label","fullWidth","value","onChange","error","disabled","password","useState","amount","weight","weightRange","showPassword","values","setValues","handleClickShowPassword","endAdornment","root","propTypes","object","isRequired","string","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,oBAA1C;AAEA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAExBC,OAFwB,GActBD,KAdsB,CAExBC,OAFwB;AAAA,QAGxBC,UAHwB,GActBF,KAdsB,CAGxBE,UAHwB;AAAA,QAIxBC,WAJwB,GActBH,KAdsB,CAIxBG,WAJwB;AAAA,QAKxBC,EALwB,GActBJ,KAdsB,CAKxBI,EALwB;AAAA,QAMxBC,YANwB,GActBL,KAdsB,CAMxBK,YANwB;AAAA,QAOxBC,KAPwB,GActBN,KAdsB,CAOxBM,KAPwB;AAAA,QAQxBC,SARwB,GActBP,KAdsB,CAQxBO,SARwB;AAAA,QASxBC,KATwB,GActBR,KAdsB,CASxBQ,KATwB;AAAA,QAUxBC,QAVwB,GActBT,KAdsB,CAUxBS,QAVwB;AAAA,QAWxBC,KAXwB,GActBV,KAdsB,CAWxBU,KAXwB;AAAA,QAYxBC,QAZwB,GActBX,KAdsB,CAYxBW,QAZwB;AAAA,QAaxBC,QAbwB,GActBZ,KAdsB,CAaxBY,QAbwB;;AAAA,0BAiBEzB,KAAK,CAAC0B,QAAN,CAAe;AACzCC,IAAAA,MAAM,EAAE,EADiC;AAEzCF,IAAAA,QAAQ,EAAE,EAF+B;AAGzCG,IAAAA,MAAM,EAAE,EAHiC;AAIzCC,IAAAA,WAAW,EAAE,EAJ4B;AAKzCC,IAAAA,YAAY,EAAE;AAL2B,GAAf,CAjBF;AAAA;AAAA,QAiBnBC,MAjBmB;AAAA,QAiBXC,SAjBW;;AAyB1B,QAAMC,uBAAuB,GAAG,MAAM;AACpCD,IAAAA,SAAS,mBAAMD,MAAN;AAAcD,MAAAA,YAAY,EAAE,CAACC,MAAM,CAACD;AAApC,OAAT;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAGT,QAAQ,GAC3B,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,4BAAvB;AAAoD,IAAA,OAAO,EAAEQ,uBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACD,YAAP,GAAsB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,CADF,CAD2B,GAKL,IALxB;AAOA,SACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEhB,OAAO,CAACqB,IAAhC;AAAsC,IAAA,OAAO,EAAC,UAA9C;AAAyD,IAAA,SAAS,EAAEf,SAApE;AAA+E,IAAA,KAAK,EAAEG,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAGJ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAGF,EADP;AAEE,IAAA,WAAW,EAAGD,WAFhB;AAGE,IAAA,SAAS,EAAGI,SAHd;AAIE,IAAA,YAAY,EAAGF,YAJjB;AAKE,IAAA,UAAU,EAAG,CALf;AAME,IAAA,KAAK,EAAGG,KANV;AAOE,IAAA,QAAQ,EAAGC,QAPb;AAQE,IAAA,QAAQ,EAAGE,QARb;AASE,IAAA,IAAI,EAAGC,QAAQ,GAAGM,MAAM,CAACD,YAAP,GAAsB,MAAtB,GAA+B,UAAlC,GAA+C,MAThE;AAUE,IAAA,YAAY,EAAGI,YAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcInB,UAAU,IAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,UAAjB,CAdlB,CADF;AAkBD;;AAEDH,WAAW,CAACwB,SAAZ,GAAwB;AACtBtB,EAAAA,OAAO,EAAEb,SAAS,CAACoC,MAAV,CAAiBC,UADJ;AAEtBnB,EAAAA,KAAK,EAAElB,SAAS,CAACsC,MAAV,CAAiBD,UAFF;AAGtBvB,EAAAA,UAAU,EAAEd,SAAS,CAACsC,MAHA;AAItBvB,EAAAA,WAAW,EAAEf,SAAS,CAACsC,MAJD;AAKtBtB,EAAAA,EAAE,EAAEhB,SAAS,CAACsC,MALQ;AAMtBrB,EAAAA,YAAY,EAAEjB,SAAS,CAACsC,MANF;AAOtBnB,EAAAA,SAAS,EAAEnB,SAAS,CAACuC,IAPC;AAQtBhB,EAAAA,QAAQ,EAAEvB,SAAS,CAACuC,IARE;AAStBnB,EAAAA,KAAK,EAAEpB,SAAS,CAACsC,MATK;AAUtBjB,EAAAA,QAAQ,EAAErB,SAAS,CAACwC,IAVE;AAWtBhB,EAAAA,QAAQ,EAAExB,SAAS,CAACuC;AAXE,CAAxB;AAcA,eAAetC,UAAU,CAACS,MAAD,CAAV,CAAmBC,WAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  FormControl,\n  OutlinedInput,\n  FormHelperText,\n  InputAdornment,\n  IconButton\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nimport StyledLabel from '../label';\nimport styles from './styles';\n\nfunction StyledInput(props) {\n  const {\n    classes,\n    helpertext,\n    placeholder,\n    id,\n    defaultValue,\n    label,\n    fullWidth,\n    value,\n    onChange,\n    error,\n    disabled,\n    password\n  } = props;\n\n\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const endAdornment = password ? (\n    <InputAdornment position=\"end\">\n      <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n      </IconButton>\n    </InputAdornment>) :  null;\n\n  return (\n    <FormControl className={classes.root} variant=\"outlined\" fullWidth={fullWidth} error={error}>\n      <StyledLabel label={ label } />\n      <OutlinedInput\n        id={ id }\n        placeholder={ placeholder }\n        fullWidth={ fullWidth }\n        defaultValue={ defaultValue }\n        labelWidth={ 0 }\n        value={ value }\n        onChange={ onChange }\n        disabled={ disabled }\n        type={ password ? values.showPassword ? 'text' : 'password' : 'text' }\n        endAdornment={ endAdornment }\n      />\n      { helpertext && <FormHelperText>{helpertext}</FormHelperText> }\n    </FormControl>\n  );\n}\n\nStyledInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  helpertext: PropTypes.string,\n  placeholder: PropTypes.string,\n  id: PropTypes.string,\n  defaultValue: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  password: PropTypes.bool\n};\n\nexport default withStyles(styles)(StyledInput);\n"]},"metadata":{},"sourceType":"module"}