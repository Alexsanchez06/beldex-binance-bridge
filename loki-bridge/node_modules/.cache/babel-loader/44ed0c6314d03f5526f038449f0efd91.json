{"ast":null,"code":"var _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\nconst walletCreationUrl = {\n  [TYPE.LOKI]: config.loki.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl\n};\n\nclass SwapSelection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      addressError: false,\n      options: [{\n        value: SWAP_TYPE.LOKI_TO_BLOKI,\n        description: 'LOKI to B-LOKI'\n      }, {\n        value: SWAP_TYPE.BLOKI_TO_LOKI,\n        description: 'B-LOKI to LOKI'\n      }]\n    };\n\n    this.onNext = () => {\n      const address = this.state.address;\n      const onNext = this.props.onNext;\n      const isValidAddress = address && address.length > 0;\n      this.setState({\n        addressError: !isValidAddress\n      });\n      if (isValidAddress) onNext(address);\n    };\n\n    this.onAddressChanged = event => {\n      this.setState({\n        address: event.target.value\n      });\n    };\n\n    this.onSwapTypeChanged = event => {\n      this.props.onSwapTypeChanged(event.target.value);\n    };\n\n    this.getAddressType = () => {\n      const swapType = this.props.swapType;\n      return swapType === SWAP_TYPE.LOKI_TO_BLOKI ? TYPE.BNB : TYPE.LOKI;\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          swapType = _this$props.swapType,\n          loading = _this$props.loading,\n          classes = _this$props.classes;\n    const _this$state = this.state,\n          options = _this$state.options,\n          address = _this$state.address,\n          addressError = _this$state.addressError;\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.LOKI ? 'Loki Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.LOKI ? 'L...' : 'bnb...';\n    const url = walletCreationUrl[addressType];\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Select, {\n      fullWidth: true,\n      label: \"Swap Type\",\n      options: options,\n      value: swapType,\n      handleChange: this.onSwapTypeChanged,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fullWidth: true,\n      label: inputLabel,\n      placeholder: inputPlaceholder,\n      value: address,\n      error: addressError,\n      onChange: this.onAddressChanged,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: url,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Don't have a wallet? create one\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      align: \"right\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fullWidth: true,\n      label: \"Next\",\n      loading: loading,\n      onClick: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Link, {\n      href: \"/tos/BLOKIBridgeTOS.html\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Terms of Service\"));\n  }\n\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n};\nexport default withStyles(styles)(SwapSelection);","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js"],"names":["React","Component","PropTypes","Grid","Typography","Link","withStyles","Input","Button","Select","SWAP_TYPE","TYPE","config","styles","walletCreationUrl","LOKI","loki","BNB","binance","SwapSelection","state","address","addressError","options","value","LOKI_TO_BLOKI","description","BLOKI_TO_LOKI","onNext","props","isValidAddress","length","setState","onAddressChanged","event","target","onSwapTypeChanged","getAddressType","swapType","render","loading","classes","addressType","inputLabel","inputPlaceholder","url","root","createAccount","button","propTypes","object","isRequired","string","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\n\nconst walletCreationUrl = {\n  [TYPE.LOKI]: config.loki.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl,\n};\n\nclass SwapSelection extends Component {\n  state = {\n    address: '',\n    addressError: false,\n    options: [{\n      value: SWAP_TYPE.LOKI_TO_BLOKI,\n      description: 'LOKI to B-LOKI',\n    }, {\n      value: SWAP_TYPE.BLOKI_TO_LOKI,\n      description: 'B-LOKI to LOKI',\n    }],\n  };\n\n  onNext = () => {\n    const { address } = this.state;\n    const { onNext } = this.props;\n\n    const isValidAddress = address && address.length > 0;\n    this.setState({ addressError: !isValidAddress });\n\n    if (isValidAddress) onNext(address);\n  }\n\n  onAddressChanged = (event) => {\n    this.setState({ address: event.target.value });\n  }\n\n  onSwapTypeChanged = (event) => {\n    this.props.onSwapTypeChanged(event.target.value);\n  }\n\n  getAddressType = () => {\n    const { swapType } = this.props;\n    return swapType === SWAP_TYPE.LOKI_TO_BLOKI ? TYPE.BNB : TYPE.LOKI;\n  }\n\n  render() {\n    const { swapType, loading, classes } = this.props;\n    const { options, address, addressError } = this.state;\n\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.LOKI ? 'Loki Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.LOKI ? 'L...' : 'bnb...';\n\n    const url = walletCreationUrl[addressType];\n\n    return (\n      <Grid item xs={ 12 } className={classes.root}>\n        <Grid item xs={ 12 }>\n          <Select\n            fullWidth\n            label=\"Swap Type\"\n            options={options}\n            value={swapType}\n            handleChange={this.onSwapTypeChanged}\n            disabled={loading}\n          />\n        </Grid>\n        <Grid item xs={ 12 }>\n          <Input\n            fullWidth\n            label={inputLabel}\n            placeholder={inputPlaceholder}\n            value={address}\n            error={addressError}\n            onChange={this.onAddressChanged}\n            disabled={loading}\n          />\n          <Typography className={ classes.createAccount }>\n            <Link href={url} target=\"_blank\" rel=\"noreferrer\">\n              Don't have a wallet? create one\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={ 12 } align='right' className={ classes.button }>\n          <Button\n            fullWidth\n            label=\"Next\"\n            loading={loading}\n            onClick={this.onNext}\n          />\n        </Grid>\n        <Link href=\"/tos/BLOKIBridgeTOS.html\" target=\"_blank\">Terms of Service</Link>\n      </Grid>\n    );\n  }\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n};\n\nexport default withStyles(styles)(SwapSelection);\n"]},"metadata":{},"sourceType":"module"}