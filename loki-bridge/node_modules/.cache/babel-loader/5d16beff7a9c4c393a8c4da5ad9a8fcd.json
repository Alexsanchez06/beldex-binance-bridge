{"ast":null,"code":"var _jsxFileName = \"/home/nowfil/nowfil/company/loki-binance-bridge/loki-bridge/src/components/snackbar/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Close as CloseIcon, Error as ErrorIcon, Info as InfoIcon, Warning as WarningIcon, CheckCircle as CheckCircleIcon } from '@material-ui/icons';\nimport styles from './styles'; // Got this from https://material-ui.com/components/snackbars/#snackbars\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst textClasses = {\n  warning: 'blackText'\n};\n\nconst capitalize = s => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nfunction StyledSnackbar(props) {\n  const classes = props.classes,\n        className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        open = props.open;\n  const Icon = variantIcon[variant];\n  const text = textClasses[variant] || 'primaryText';\n  return React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    disableWindowBlurListener: true,\n    onClose: onClose,\n    ContentProps: {\n      'aria-describedby': 'message-id',\n      className: clsx(classes[variant], className)\n    },\n    message: React.createElement(\"span\", {\n      id: \"message-id\",\n      className: clsx(classes.message, classes[text]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), message && capitalize(message.toString())),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: clsx(classes.icon, classes[text]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}\n\nStyledSnackbar.propTypes = {\n  classes: PropTypes.any.isRequired,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.any,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nexport default withStyles(styles)(StyledSnackbar);","map":{"version":3,"sources":["/home/nowfil/nowfil/company/loki-binance-bridge/loki-bridge/src/components/snackbar/index.js"],"names":["React","PropTypes","clsx","Snackbar","IconButton","withStyles","Close","CloseIcon","Error","ErrorIcon","Info","InfoIcon","Warning","WarningIcon","CheckCircle","CheckCircleIcon","styles","variantIcon","success","warning","error","info","textClasses","capitalize","s","charAt","toUpperCase","slice","StyledSnackbar","props","classes","className","message","onClose","variant","open","Icon","text","vertical","horizontal","icon","iconVariant","toString","propTypes","any","isRequired","bool","func","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Close as CloseIcon,\n  Error as ErrorIcon,\n  Info as InfoIcon,\n  Warning as WarningIcon,\n  CheckCircle as CheckCircleIcon\n} from '@material-ui/icons';\nimport styles from './styles';\n\n// Got this from https://material-ui.com/components/snackbars/#snackbars\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst textClasses = {\n  warning: 'blackText',\n};\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nfunction StyledSnackbar(props) {\n  const { classes, className, message, onClose, variant, open } = props;\n  const Icon = variantIcon[variant];\n\n  const text = textClasses[variant] || 'primaryText';\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={6000}\n      disableWindowBlurListener\n      onClose={onClose}\n      ContentProps={{\n        'aria-describedby': 'message-id',\n        className: clsx(classes[variant], className)\n      }}\n      message={\n        <span id=\"message-id\" className={clsx(classes.message, classes[text])}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message && capitalize(message.toString())}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={clsx(classes.icon, classes[text])} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nStyledSnackbar.propTypes = {\n  classes: PropTypes.any.isRequired,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.any,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(StyledSnackbar);\n"]},"metadata":{},"sourceType":"module"}