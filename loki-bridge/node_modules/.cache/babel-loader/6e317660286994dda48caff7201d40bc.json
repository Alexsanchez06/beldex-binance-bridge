{"ast":null,"code":"var _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\nconst walletCreationUrl = {\n  [TYPE.BDX]: config.beldex.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl\n};\n\nclass SwapSelection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      addressError: false,\n      options: [{\n        value: SWAP_TYPE.BDX_TO_BBDX,\n        description: 'BDX to B-BDX'\n      }, {\n        value: SWAP_TYPE.BBDX_TO_BDX,\n        description: 'B-BDX to BDX'\n      }]\n    };\n\n    this.onNext = () => {\n      const address = this.state.address;\n      const onNext = this.props.onNext;\n      const isValidAddress = address && address.length > 0;\n      this.setState({\n        addressError: !isValidAddress\n      });\n      if (isValidAddress) onNext(address);\n    };\n\n    this.onAddressChanged = event => {\n      this.setState({\n        address: event.target.value\n      });\n    };\n\n    this.onSwapTypeChanged = event => {\n      this.props.onSwapTypeChanged(event.target.value);\n    };\n\n    this.getAddressType = () => {\n      const swapType = this.props.swapType;\n      return swapType === SWAP_TYPE.BDX_TO_BBDX ? TYPE.BNB : TYPE.BDX;\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          swapType = _this$props.swapType,\n          loading = _this$props.loading,\n          classes = _this$props.classes,\n          info = _this$props.info;\n    const _this$state = this.state,\n          options = _this$state.options,\n          address = _this$state.address,\n          addressError = _this$state.addressError;\n    console.log(info);\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.BDX ? 'BDX Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.BDX ? 'bdx...' : 'bnb...';\n    const url = walletCreationUrl[addressType];\n    console.log(this.props.info.fees);\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Select, {\n      fullWidth: true,\n      label: \"Swap Type\",\n      options: options,\n      value: swapType,\n      handleChange: this.onSwapTypeChanged,\n      disabled: loading,\n      className: \"belSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Swap Fee : \", this.props.info.fees && this.props.info.fees.bdx, \" \", \" \", \" BDX\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fullWidth: true,\n      label: inputLabel,\n      placeholder: inputPlaceholder,\n      value: address,\n      error: addressError,\n      onChange: this.onAddressChanged,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: '#fff'\n      },\n      href: url,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Don't have a wallet? create one\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      align: \"right\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fullWidth: true,\n      label: \"Next\",\n      loading: loading,\n      onClick: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Link, {\n      className: classes.belLink,\n      href: \"/tos/BBDXBridgeTOS.html\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Terms of Service\"));\n  }\n\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n};\nexport default withStyles(styles)(SwapSelection);","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js"],"names":["React","Component","PropTypes","Grid","Typography","Link","withStyles","Input","Button","Select","SWAP_TYPE","TYPE","config","styles","walletCreationUrl","BDX","beldex","BNB","binance","SwapSelection","state","address","addressError","options","value","BDX_TO_BBDX","description","BBDX_TO_BDX","onNext","props","isValidAddress","length","setState","onAddressChanged","event","target","onSwapTypeChanged","getAddressType","swapType","render","loading","classes","info","console","log","addressType","inputLabel","inputPlaceholder","url","fees","root","fontSize","bdx","createAccount","color","button","belLink","propTypes","object","isRequired","string","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\n\nconst walletCreationUrl = {\n  [TYPE.BDX]: config.beldex.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl,\n};\n\nclass SwapSelection extends Component {\n  state = {\n    address: '',\n    addressError: false,\n    options: [{\n      value: SWAP_TYPE.BDX_TO_BBDX,\n      description: 'BDX to B-BDX',\n    }, {\n      value: SWAP_TYPE.BBDX_TO_BDX,\n      description: 'B-BDX to BDX',\n    }],\n  };\n\n  onNext = () => {\n    const { address } = this.state;\n    const { onNext } = this.props;\n\n    const isValidAddress = address && address.length > 0;\n    this.setState({ addressError: !isValidAddress });\n\n    if (isValidAddress) onNext(address);\n  }\n\n  onAddressChanged = (event) => {\n    this.setState({ address: event.target.value });\n  }\n\n  onSwapTypeChanged = (event) => {\n    this.props.onSwapTypeChanged(event.target.value);\n  }\n\n  getAddressType = () => {\n    const { swapType } = this.props;\n    return swapType === SWAP_TYPE.BDX_TO_BBDX ? TYPE.BNB : TYPE.BDX;\n  }\n\n  render() {\n    const { swapType, loading, classes, info } = this.props;\n    const { options, address, addressError } = this.state;\n    console.log(info)\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.BDX ? 'BDX Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.BDX ? 'bdx...' : 'bnb...';\n\n    const url = walletCreationUrl[addressType];\n    console.log(this.props.info.fees)\n\n    return (\n      <Grid item xs={ 12 } className={classes.root}>\n        <Grid item xs={ 12 }>\n          <Select\n            fullWidth\n            label=\"Swap Type\"\n            options={options}\n            value={swapType}\n            handleChange={this.onSwapTypeChanged}\n            disabled={loading}\n            className=\"belSelect\"\n          />\n        </Grid>\n        <Typography style={{fontSize:12}}>\n          Swap Fee : {this.props.info.fees && this.props.info.fees.bdx} {\" \"} BDX\n        </Typography>\n        \n        <Grid item xs={ 12 }>\n          <Input\n            fullWidth\n            label={inputLabel}\n            placeholder={inputPlaceholder}\n            value={address}\n            error={addressError}\n            onChange={this.onAddressChanged}\n            disabled={loading}\n          />\n          <Typography className={ classes.createAccount }>\n            <Link style={{color : '#fff'}} href={url} target=\"_blank\" rel=\"noreferrer\">\n              Don't have a wallet? create one\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={ 12 } align='right' className={ classes.button }>\n          <Button\n            fullWidth\n            label=\"Next\"\n            loading={loading}\n            onClick={this.onNext}\n          />\n        </Grid>\n        <Link className={classes.belLink} href=\"/tos/BBDXBridgeTOS.html\" target=\"_blank\">Terms of Service</Link>\n      </Grid>\n    );\n  }\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n};\n\nexport default withStyles(styles)(SwapSelection);\n"]},"metadata":{},"sourceType":"module"}