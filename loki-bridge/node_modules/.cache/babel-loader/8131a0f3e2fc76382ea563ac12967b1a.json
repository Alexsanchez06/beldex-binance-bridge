{"ast":null,"code":"import _objectWithoutProperties from \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/imageLoader.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nconst _loaded = {};\nexport default class ImageLoader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: _loaded[this.props.src]\n    };\n\n    this.onLoad = () => {\n      _loaded[this.props.src] = true;\n      this.setState(() => ({\n        loaded: true\n      }));\n    };\n  }\n\n  render() {\n    const loaded = this.state.loaded;\n\n    const _this$props = this.props,\n          className = _this$props.className,\n          loadedClassName = _this$props.loadedClassName,\n          loadingClassName = _this$props.loadingClassName,\n          src = _this$props.src,\n          alt = _this$props.alt,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"loadedClassName\", \"loadingClassName\", \"src\", \"alt\"]);\n\n    return React.createElement(\"img\", Object.assign({\n      src: src,\n      alt: alt,\n      className: clsx(className, loaded ? loadedClassName : loadingClassName),\n      onLoad: this.onLoad\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\nImageLoader.defaultProps = {\n  className: '',\n  loadingClassName: 'img-loading',\n  loadedClassName: 'img-loaded'\n};\nImageLoader.propTypes = {\n  className: PropTypes.string,\n  loadingClassName: PropTypes.string,\n  loadedClassName: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/imageLoader.js"],"names":["React","Component","PropTypes","clsx","_loaded","ImageLoader","state","loaded","props","src","onLoad","setState","render","className","loadedClassName","loadingClassName","alt","defaultProps","propTypes","string","isRequired"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,MAAMC,OAAO,GAAG,EAAhB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAGjDK,KAHiD,GAGzC;AACNC,MAAAA,MAAM,EAAEH,OAAO,CAAC,KAAKI,KAAL,CAAWC,GAAZ;AADT,KAHyC;;AAAA,SAejDC,MAfiD,GAexC,MAAM;AACbN,MAAAA,OAAO,CAAC,KAAKI,KAAL,CAAWC,GAAZ,CAAP,GAA0B,IAA1B;AACA,WAAKE,QAAL,CAAc,OAAO;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OAAP,CAAd;AACD,KAlBgD;AAAA;;AAqBjDK,EAAAA,MAAM,GAAG;AAAA,UAECL,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;;AAAA,wBAGsE,KAAKC,KAH3E;AAAA,UAGCK,SAHD,eAGCA,SAHD;AAAA,UAGYC,eAHZ,eAGYA,eAHZ;AAAA,UAG6BC,gBAH7B,eAG6BA,gBAH7B;AAAA,UAG+CN,GAH/C,eAG+CA,GAH/C;AAAA,UAGoDO,GAHpD,eAGoDA,GAHpD;AAAA,UAG4DR,KAH5D;;AAKP,WACE;AACE,MAAA,GAAG,EAAEC,GADP;AAEE,MAAA,GAAG,EAAEO,GAFP;AAGE,MAAA,SAAS,EAAEb,IAAI,CAACU,SAAD,EAAYN,MAAM,GAAGO,eAAH,GAAqBC,gBAAvC,CAHjB;AAIE,MAAA,MAAM,EAAE,KAAKL;AAJf,OAKMF,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD;;AAnCgD;AAA9BH,W,CAQZY,Y,GAAe;AACpBJ,EAAAA,SAAS,EAAE,EADS;AAEpBE,EAAAA,gBAAgB,EAAE,aAFE;AAGpBD,EAAAA,eAAe,EAAE;AAHG,C;AA8BxBT,WAAW,CAACa,SAAZ,GAAwB;AACtBL,EAAAA,SAAS,EAAEX,SAAS,CAACiB,MADC;AAEtBJ,EAAAA,gBAAgB,EAAEb,SAAS,CAACiB,MAFN;AAGtBL,EAAAA,eAAe,EAAEZ,SAAS,CAACiB,MAHL;AAItBV,EAAAA,GAAG,EAAEP,SAAS,CAACiB,MAAV,CAAiBC,UAJA;AAKtBJ,EAAAA,GAAG,EAAEd,SAAS,CAACiB,MAAV,CAAiBC;AALA,CAAxB","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n\nconst _loaded = {};\n\nexport default class ImageLoader extends Component {\n\n  //initial state: image loaded stage\n  state = {\n    loaded: _loaded[this.props.src]\n  };\n\n  //define our loading and loaded image classes\n  static defaultProps = {\n    className: '',\n    loadingClassName: 'img-loading',\n    loadedClassName: 'img-loaded'\n  };\n\n  //image onLoad handler to update state to loaded\n  onLoad = () => {\n    _loaded[this.props.src] = true;\n    this.setState(() => ({ loaded: true }));\n  };\n\n\n  render() {\n\n    const { loaded } = this.state;\n    const { className, loadedClassName, loadingClassName, src, alt, ...props } = this.props;\n\n    return (\n      <img\n        src={src}\n        alt={alt}\n        className={clsx(className, loaded ? loadedClassName : loadingClassName)}\n        onLoad={this.onLoad}\n        {...props}\n      />\n    );\n  }\n}\n\nImageLoader.propTypes = {\n  className: PropTypes.string,\n  loadingClassName: PropTypes.string,\n  loadedClassName: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}