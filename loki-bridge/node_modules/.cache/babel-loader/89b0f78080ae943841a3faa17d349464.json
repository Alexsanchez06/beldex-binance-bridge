{"ast":null,"code":"var _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\nimport LoginPopup from './loginpop';\nconst walletCreationUrl = {\n  [TYPE.BDX]: config.beldex.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl\n};\n\nclass SwapSelection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      addressError: false,\n      options: [{\n        value: SWAP_TYPE.BDX_TO_BBDX,\n        description: 'BDX to B-BDX'\n      }, {\n        value: SWAP_TYPE.BBDX_TO_BDX,\n        description: 'B-BDX to BDX'\n      }],\n      loginOpen: false\n    };\n\n    this.onNext = () => {\n      const address = this.state.address;\n      const onNext = this.props.onNext;\n      const isValidAddress = address && address.length > 0;\n      this.setState({\n        addressError: !isValidAddress\n      });\n      if (isValidAddress) onNext(address);\n    };\n\n    this.onAddressChanged = event => {\n      this.setState({\n        address: event.target.value\n      });\n    };\n\n    this.onSwapTypeChanged = event => {\n      this.props.onSwapTypeChanged(event.target.value);\n      console.log(event.target.value);\n\n      if (event.target.value == \"bdx_to_bbdx\") {\n        this.setState({\n          loginOpen: true\n        });\n      }\n    };\n\n    this.getAddressType = () => {\n      const swapType = this.props.swapType;\n      return swapType === SWAP_TYPE.BDX_TO_BBDX ? TYPE.BNB : TYPE.BDX;\n    };\n\n    this.loginClose = () => {\n      this.setState({\n        loginOpen: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          swapType = _this$props.swapType,\n          loading = _this$props.loading,\n          classes = _this$props.classes;\n    const _this$state = this.state,\n          options = _this$state.options,\n          address = _this$state.address,\n          addressError = _this$state.addressError;\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.BDX ? 'BDX Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.BDX ? 'bdx...' : 'bbdx...';\n    const url = walletCreationUrl[addressType];\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Select, {\n      fullWidth: true,\n      label: \"Swap Type\",\n      options: options,\n      value: swapType,\n      handleChange: this.onSwapTypeChanged,\n      disabled: loading,\n      className: classes.belSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Swap Fee : \", this.props.info.fees && this.props.info.fees.bdx, \" \", \" \", \" BDX\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fullWidth: true,\n      label: inputLabel,\n      placeholder: inputPlaceholder,\n      value: address,\n      error: addressError,\n      onChange: this.onAddressChanged,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.createAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        color: '#000'\n      },\n      href: url,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Don't have a wallet? create one\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      align: \"right\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fullWidth: true,\n      label: \"Next\",\n      loading: loading,\n      onClick: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Link, {\n      className: classes.belLink,\n      href: \"BBDXBridgeTOS.html\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Terms of Service\"), this.state.loginOpen && React.createElement(LoginPopup, {\n      open: this.state.loginOpen,\n      loginClose: this.loginClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n};\nexport default withStyles(styles)(SwapSelection);","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/index.js"],"names":["React","Component","PropTypes","Grid","Typography","Link","withStyles","Input","Button","Select","SWAP_TYPE","TYPE","config","styles","LoginPopup","walletCreationUrl","BDX","beldex","BNB","binance","SwapSelection","state","address","addressError","options","value","BDX_TO_BBDX","description","BBDX_TO_BDX","loginOpen","onNext","props","isValidAddress","length","setState","onAddressChanged","event","target","onSwapTypeChanged","console","log","getAddressType","swapType","loginClose","render","loading","classes","addressType","inputLabel","inputPlaceholder","url","root","belSelect","fontSize","info","fees","bdx","createAccount","color","button","belLink","propTypes","object","isRequired","string","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Link } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, Button, Select } from '@components';\nimport { SWAP_TYPE, TYPE } from '@constants';\nimport config from '@config';\nimport styles from './styles';\nimport LoginPopup from './loginpop';\n\nconst walletCreationUrl = {\n  [TYPE.BDX]: config.beldex.walletCreationUrl,\n  [TYPE.BNB]: config.binance.walletCreationUrl,\n};\n\nclass SwapSelection extends Component {\n  state = {\n    address: '',\n    addressError: false,\n    options: [{\n      value: SWAP_TYPE.BDX_TO_BBDX,\n      description: 'BDX to B-BDX',\n    }, {\n      value: SWAP_TYPE.BBDX_TO_BDX,\n      description: 'B-BDX to BDX',\n    }],\n    loginOpen: false,\n  };\n\n  onNext = () => {\n    const { address } = this.state;\n    const { onNext } = this.props;\n\n    const isValidAddress = address && address.length > 0;\n    this.setState({ addressError: !isValidAddress });\n\n    if (isValidAddress) onNext(address);\n  }\n\n  onAddressChanged = (event) => {\n    this.setState({ address: event.target.value });\n  }\n\n  onSwapTypeChanged = (event) => {\n    this.props.onSwapTypeChanged(event.target.value);\n    console.log(event.target.value)\n    if (event.target.value== \"bdx_to_bbdx\")\n    {\n      this.setState({loginOpen: true})\n    }\n  }\n\n  getAddressType = () => {\n    const { swapType } = this.props;\n    return swapType === SWAP_TYPE.BDX_TO_BBDX ? TYPE.BNB : TYPE.BDX;\n  }\n  loginClose = () => {\n    this.setState({loginOpen: false})\n  }\n  render() {\n    const { swapType, loading, classes } = this.props;\n    const { options, address, addressError } = this.state;\n    const addressType = this.getAddressType();\n    const inputLabel = addressType === TYPE.BDX ? 'BDX Address' : 'BNB Address';\n    const inputPlaceholder = addressType === TYPE.BDX ? 'bdx...' : 'bbdx...';\n\n    const url = walletCreationUrl[addressType];\n    return (\n      <Grid item xs={ 12 } className={classes.root}>\n        <Grid item xs={ 12 }>\n          <Select\n            fullWidth\n            label=\"Swap Type\"\n            options={options}\n            value={swapType}\n            handleChange={this.onSwapTypeChanged}\n            disabled={loading}\n            className={classes.belSelect}\n          />\n        </Grid>\n        <Typography style={{fontSize:12}}>\n          Swap Fee : {this.props.info.fees && this.props.info.fees.bdx} {\" \"} BDX\n        </Typography>\n        \n        <Grid item xs={ 12 }>\n          <Input\n            fullWidth\n            label={inputLabel}\n            placeholder={inputPlaceholder}\n            value={address}\n            error={addressError}\n            onChange={this.onAddressChanged}\n            disabled={loading}\n          />\n          <Typography className={ classes.createAccount }>\n            <Link style={{color : '#000'}} href={url} target=\"_blank\" rel=\"noreferrer\">\n              Don't have a wallet? create one\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={ 12 } align='right' className={ classes.button }>\n          <Button\n            fullWidth\n            label=\"Next\"\n            loading={loading}\n            onClick={this.onNext}\n          />\n        </Grid>\n        <Link className={classes.belLink} href=\"BBDXBridgeTOS.html\" target=\"_blank\">Terms of Service</Link>\n        {\n          this.state.loginOpen &&\n          <LoginPopup open={this.state.loginOpen} loginClose={this.loginClose} />\n        }\n        \n        \n      </Grid>\n    );\n  }\n}\n\nSwapSelection.propTypes = {\n  classes: PropTypes.object.isRequired,\n  swapType: PropTypes.string.isRequired,\n  onSwapTypeChanged: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n};\n\nexport default withStyles(styles)(SwapSelection);\n"]},"metadata":{},"sourceType":"module"}