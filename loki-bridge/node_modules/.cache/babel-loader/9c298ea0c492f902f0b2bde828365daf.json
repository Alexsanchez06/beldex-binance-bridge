{"ast":null,"code":"import _objectSpread from \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport LazyLoad from 'react-lazy-load';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Grid, Box } from '@material-ui/core';\nimport { store, dispatcher, Actions, Events } from '@store';\nimport { Snackbar, Swap, ImageLoader } from '@components';\nimport theme from '@theme';\nexport default class App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      snackbar: {\n        message: null,\n        variant: 'success',\n        open: false,\n        balance: \"\"\n      }\n    };\n\n    this.componentDidMount = () => {\n      store.on(Events.FETCHED_BALANCE, this.onBalUpdated);\n    };\n\n    this.onBalUpdated = () => {\n      this.setState({\n        balance: store.getStore('balance') || {}\n      }, () => {\n        console.log(this.state.balance);\n      });\n    };\n\n    this.showMessage = (message, variant) => {\n      const snackbar = {\n        message,\n        variant: variant || 'error',\n        open: true\n      };\n      this.setState({\n        snackbar\n      });\n    };\n\n    this.closeMessage = (event, reason) => {\n      if (reason === 'clickaway') return;\n\n      const snackbar = _objectSpread({}, this.state.snackbar, {\n        open: false\n      });\n\n      this.setState({\n        snackbar\n      });\n    };\n\n    this.renderSnackbar = () => {\n      const snackbar = this.state.snackbar;\n      return React.createElement(Snackbar, {\n        message: snackbar.message,\n        open: snackbar.open,\n        onClose: this.closeMessage,\n        variant: snackbar.variant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    this.renderBackgroundImage = () => {\n      return React.createElement(\"div\", {\n        id: \"background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(LazyLoad, {\n        height: '100%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ImageLoader, {\n        className: \"backgroundImage\",\n        loadedClassName: \"backgroundImageLoaded\",\n        src: \"/images/background.jpg\",\n        alt: \"Background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    };\n\n    this.renderTitleImage = () => {\n      return React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(LazyLoad, {\n        height: '60px',\n        className: \"titleContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ImageLoader, {\n        className: \"titleImage\",\n        loadedClassName: \"titleImageLoaded\",\n        src: \"/images/logo.png\",\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentWillMount() {\n    dispatcher.dispatch({\n      type: Actions.GET_BALANCE\n    });\n  }\n\n  render() {\n    let bal = 0;\n\n    if (this.state.balance && this.state.balance.length > 0) {\n      bal = Number(parseFloat(this.state.balance[0].movedBalance).toFixed(2)).toLocaleString('en', {\n        minimumFractionDigits: 2\n      });\n    }\n\n    return React.createElement(MuiThemeProvider, {\n      theme: createMuiTheme(theme),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), this.renderBackgroundImage(), React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderTitleImage(), React.createElement(\"div\", {\n      className: \"movedBal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Total bdx moved to Binance chain\"), React.createElement(\"p\", {\n      className: \"movedBal-p2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, bal, \" \", React.createElement(\"span\", {\n      className: \"availBal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"/ 2,000.00\"))), React.createElement(Grid, {\n      id: \"grid\",\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Swap, {\n      showMessage: this.showMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), this.renderSnackbar()))));\n  }\n\n}","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/App.js"],"names":["React","PureComponent","LazyLoad","CssBaseline","createMuiTheme","MuiThemeProvider","Grid","Box","store","dispatcher","Actions","Events","Snackbar","Swap","ImageLoader","theme","App","state","snackbar","message","variant","open","balance","componentDidMount","on","FETCHED_BALANCE","onBalUpdated","setState","getStore","console","log","showMessage","closeMessage","event","reason","renderSnackbar","renderBackgroundImage","renderTitleImage","componentWillMount","dispatch","type","GET_BALANCE","render","bal","length","Number","parseFloat","movedBalance","toFixed","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport LazyLoad from 'react-lazy-load';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Grid, Box } from '@material-ui/core';\nimport { store, dispatcher, Actions, Events } from '@store';\nimport { Snackbar, Swap, ImageLoader } from '@components';\nimport theme from '@theme';\n\nexport default class App extends PureComponent {\n  state = {\n    snackbar: {\n      message: null,\n      variant: 'success',\n      open: false,\n      balance: \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    store.on(Events.FETCHED_BALANCE, this.onBalUpdated);\n  }\n\n  componentWillMount() {\n    dispatcher.dispatch({\n      type: Actions.GET_BALANCE\n    });\n  }\n\n  onBalUpdated = () => {\n    this.setState({ balance: store.getStore('balance') || {} }, () => {\n      console.log(this.state.balance)\n    });\n  }\n\n  showMessage = (message, variant) => {\n    const snackbar = {\n      message,\n      variant: variant || 'error',\n      open: true\n    };\n    this.setState({ snackbar });\n  }\n\n  closeMessage = (event, reason) => {\n    if (reason === 'clickaway') return;\n    const snackbar = {\n      ...this.state.snackbar,\n      open: false\n    };\n    this.setState({ snackbar });\n  }\n\n  renderSnackbar = () => {\n    const { snackbar } = this.state;\n    return <Snackbar message={snackbar.message} open={snackbar.open} onClose={this.closeMessage} variant={snackbar.variant} />;\n  }\n\n  renderBackgroundImage = () => {\n    return (\n      <div id=\"background\">\n        <LazyLoad height={'100%'}>\n          <ImageLoader className=\"backgroundImage\" loadedClassName=\"backgroundImageLoaded\" src=\"/images/background.jpg\" alt=\"Background\" />\n        </LazyLoad>\n      </div>\n    );\n  }\n\n  renderTitleImage = () => {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" className=\"title\">\n        <LazyLoad height={'60px'} className=\"titleContainer\">\n          <ImageLoader className=\"titleImage\" loadedClassName=\"titleImageLoaded\" src=\"/images/logo.png\" alt=\"Logo\" />\n        </LazyLoad>\n        {/* <div className=\"moving\">\n\n        </div> */}\n      </Box>\n    );\n  }\n\n  render() {\n    let bal = 0\n    if(this.state.balance && this.state.balance.length > 0){\n      bal = Number(parseFloat(this.state.balance[0].movedBalance).toFixed(2)).toLocaleString('en', {\n        minimumFractionDigits: 2\n      })\n    }\n    return (\n      <MuiThemeProvider theme={createMuiTheme(theme)}>\n        <CssBaseline />\n        {this.renderBackgroundImage()}\n        <div id=\"content\">\n          {this.renderTitleImage()}\n          <div className=\"movedBal\">\n            <p>Total bdx moved to Binance chain</p>\n            <p className=\"movedBal-p2\">{bal} <span className=\"availBal\">/ 2,000.00</span></p>\n          </div>\n          <Grid\n            id=\"grid\"\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              <Swap showMessage={this.showMessage} />\n              {this.renderSnackbar()}\n            </Grid>\n          </Grid>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}