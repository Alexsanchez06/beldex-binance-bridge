{"ast":null,"code":"import _slicedToArray from \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/swapTabs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TabContainer(props) {\n  return React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      padding: \"3px 15px 10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.children);\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function SwapTabs(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  function handleChange(e, newValue) {\n    setValue(newValue);\n    console.log(newValue);\n    let value = '';\n\n    if (newValue == 0) {\n      value = \"bdx_to_bbdx\";\n    }\n\n    if (newValue == 1) {\n      value = 'bbdx_to_bdx';\n    }\n\n    props.handleChange(value);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"BDX to Binace BDX\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"Binance BDX to BDX\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), value === 0 && React.createElement(TabContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"BDX to Binance BDX\"), value === 1 && React.createElement(TabContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Binance BDX to BDX\"));\n}","map":{"version":3,"sources":["/home/nowfil/nowfil/company/beldex/loki-binance-bridge/loki-bridge/src/components/swapSelection/swapTabs.js"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","TabContainer","props","padding","children","propTypes","node","isRequired","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SwapTabs","classes","useState","value","setValue","handleChange","e","newValue","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,KAAtB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD;;AAEDH,YAAY,CAACI,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAET,SAAS,CAACW,IAAV,CAAeC;AADF,CAAzB;AAIA,MAAMC,SAAS,GAAGZ,UAAU,CAACa,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;AAFtC;AAD+B,CAAL,CAAN,CAA5B;AAOA,eAAe,SAASC,QAAT,CAAkBd,KAAlB,EAAyB;AACtC,QAAMe,OAAO,GAAGT,SAAS,EAAzB;;AADsC,0BAEZd,KAAK,CAACwB,QAAN,CAAe,CAAf,CAFY;AAAA;AAAA,QAE/BC,KAF+B;AAAA,QAExBC,QAFwB;;AAItC,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,QAAzB,EAAmC;AACjCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIJ,KAAK,GAAG,EAAZ;;AACA,QAAGI,QAAQ,IAAI,CAAf,EAAiB;AACbJ,MAAAA,KAAK,GAAG,aAAR;AACH;;AACD,QAAGI,QAAQ,IAAI,CAAf,EAAiB;AACbJ,MAAAA,KAAK,GAAG,aAAR;AACH;;AACDjB,IAAAA,KAAK,CAACmB,YAAN,CAAmBF,KAAnB;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,KAAb;AAAoB,IAAA,QAAQ,EAAEE,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAOGF,KAAK,KAAK,CAAV,IAAe,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPlB,EAQGA,KAAK,KAAK,CAAV,IAAe,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARlB,CADF;AAYD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: \"3px 15px 10px\" }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SwapTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(e, newValue) {\n    setValue(newValue);\n    console.log(newValue)\n    let value = '';\n    if(newValue == 0){\n        value = \"bdx_to_bbdx\"\n    }\n    if(newValue == 1){\n        value = 'bbdx_to_bdx'\n    }\n    props.handleChange(value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange}>\n          <Tab label=\"BDX to Binace BDX\" />\n          <Tab label=\"Binance BDX to BDX\" />\n        </Tabs>\n      </AppBar>\n      {value === 0 && <TabContainer>BDX to Binance BDX</TabContainer>}\n      {value === 1 && <TabContainer>Binance BDX to BDX</TabContainer>}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}